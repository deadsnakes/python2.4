From: Felix Krull <f_krull@gmx.de>
Date: Fri, 27 Apr 2018 08:06:23 -0700
Subject: deadsnakes-ncursesw-include-dir

# Add /usr/include/ncursesw for the _curses and _cursespanel modules. Prior to
# precise, libreadline-dev would pull in libncurses5-dev which provides
# /usr/include/curses.h; but that's kinda wrong and doesn't work in precise
# anymore (at least on amd64), so we just use the correct include path right
# away. See also:
# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=650600
---
 configure.in | 22 +++++++++++++---------
 setup.py     |  7 +++++--
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/configure.in b/configure.in
index 1f233c2..462cc25 100644
--- a/configure.in
+++ b/configure.in
@@ -1068,8 +1068,8 @@ dnl AC_MSG_RESULT($cpp_type)
 
 # checks for header files
 AC_HEADER_STDC
-AC_CHECK_HEADERS(curses.h dlfcn.h fcntl.h grp.h langinfo.h \
-libintl.h ncurses.h poll.h pthread.h \
+AC_CHECK_HEADERS(dlfcn.h fcntl.h grp.h langinfo.h \
+libintl.h poll.h pthread.h \
 stdint.h stropts.h termios.h thread.h \
 unistd.h utime.h \
 sys/audioio.h sys/bsdtty.h sys/file.h sys/loadavg.h sys/lock.h sys/mkdev.h \
@@ -1081,13 +1081,6 @@ bluetooth/bluetooth.h)
 AC_HEADER_DIRENT
 AC_HEADER_MAJOR
 
-# On Solaris, term.h requires curses.h
-AC_CHECK_HEADERS(term.h,,,[
-#ifdef HAVE_CURSES_H
-#include <curses.h>
-#endif
-])
-
 # checks for typedefs
 was_it_defined=no
 AC_MSG_CHECKING(for clock_t in time.h)
@@ -3193,6 +3186,17 @@ then
   [Define if you have struct stat.st_mtim.tv_nsec])
 fi
 
+ac_save_cppflags="$CPPFLAGS"
+CPPFLAGS="$CPPFLAGS -I/usr/include/ncursesw"
+AC_CHECK_HEADERS(curses.h ncurses.h)
+
+# On Solaris, term.h requires curses.h
+AC_CHECK_HEADERS(term.h,,,[
+#ifdef HAVE_CURSES_H
+#include <curses.h>
+#endif
+])
+
 # On HP/UX 11.0, mvwdelch is a block with a return statement
 AC_MSG_CHECKING(whether mvwdelch is an expression)
 AC_CACHE_VAL(ac_cv_mvwdelch_is_expression,
diff --git a/setup.py b/setup.py
index 0485f0c..14dc97f 100644
--- a/setup.py
+++ b/setup.py
@@ -824,13 +824,15 @@ class PyBuildExt(build_ext):
         # Curses support, requiring the System V version of curses, often
         # provided by the ncurses library.
         panel_library = 'panel'
+        ncursesw_incdirs = ["/usr/include/ncursesw"]
         if (self.compiler.find_library_file(lib_dirs, 'ncursesw')):
             curses_libs = ['ncursesw']
             # Bug 1464056: If _curses.so links with ncursesw,
             # _curses_panel.so must link with panelw.
             panel_library = 'panelw'
             exts.append( Extension('_curses', ['_cursesmodule.c'],
-                                   libraries = curses_libs) )
+                                   libraries = curses_libs,
+                                   include_dirs = ncursesw_incdirs) )
         elif (self.compiler.find_library_file(lib_dirs, 'ncurses')):
             curses_libs = ['ncurses']
             exts.append( Extension('_curses', ['_cursesmodule.c'],
@@ -853,7 +855,8 @@ class PyBuildExt(build_ext):
         if (module_enabled(exts, '_curses') and
             self.compiler.find_library_file(lib_dirs, panel_library)):
             exts.append( Extension('_curses_panel', ['_curses_panel.c'],
-                                   libraries = [panel_library] + curses_libs) )
+                                   libraries = [panel_library] + curses_libs,
+                                   include_dirs = ncursesw_incdirs) )
 
         # Build `fpectl` module if Python is configured with --with-fpectl
         data = open('pyconfig.h').read()
